/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.LineManagement;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.CommuterSystem.CommuterSystem;
import model.LineManagement.Line;
import model.LineManagement.LineDirectory;

/**
 *
 * @author priyankbagad
 */
public class ViewEditLinePanel extends javax.swing.JPanel {
    private LineDirectory lineDirectory;
    private JPanel userProcessContainer;
    private CommuterSystem commuterSystem;
    /**
     * Creates new form ViewEditLinePanel
     */
    public ViewEditLinePanel(JPanel userProcessContainer,CommuterSystem commuterSystem) {
        
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.commuterSystem = commuterSystem;
        this.lineDirectory = commuterSystem.getLineDirectory();
    if (this.lineDirectory == null) {
        throw new IllegalStateException("Line Directory is not initialized in CommuterSystem.");
    }
        populateLineTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lineTable = new javax.swing.JTable();
        btnManage = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 153, 255));

        lineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Line Name", "Start_Station", "End_Station", "Status", "No. of Stations"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(lineTable);

        btnManage.setText("View / Edit Line");
        btnManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setText("<<< BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        lblTitle.setText("VIEW DETAILS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jButton2)
                        .addGap(102, 102, 102)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(561, 561, 561)
                                .addComponent(btnManage))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(lblTitle))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnManage)
                .addContainerGap(226, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageActionPerformed
        // TODO add your handling code here:
       int selectedRow = lineTable.getSelectedRow();
    if (selectedRow < 0) {
        JOptionPane.showMessageDialog(this, "Please select a line to view/edit.", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Ensure lineDirectory is initialized
    if (lineDirectory == null) {
        JOptionPane.showMessageDialog(this, "Line Directory is not initialized.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Get selected line
    Line selectedLine = lineDirectory.getLineList().get(selectedRow);
    if (selectedLine == null) {
        JOptionPane.showMessageDialog(this, "Selected line is null.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Pass selectedLine to the EditLinePanel
    EditLinePanel editLinePanel = new EditLinePanel(userProcessContainer, commuterSystem, selectedLine);
    userProcessContainer.add("EditLinePanel", editLinePanel);

    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
    layout.show(userProcessContainer, "EditLinePanel");

    }//GEN-LAST:event_btnManageActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
           userProcessContainer.remove(this);

        // Refresh and navigate to the previous panel
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

        // Refresh the container to ensure proper layout update
        userProcessContainer.revalidate();
        userProcessContainer.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnManage;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable lineTable;
    // End of variables declaration//GEN-END:variables

    private void populateLineTable() {
        DefaultTableModel tableModel = (DefaultTableModel) lineTable.getModel();
        tableModel.setRowCount(0);

        for (Line line : lineDirectory.getLineList()) {
            tableModel.addRow(new Object[]{
                line.getLineName(),
                line.getStartStation(),
                line.getEndStation(),
                line.getStatus(),
                line.getNumberOfStations()
            });
        }
    }
    public void refreshLineTable() {
        populateLineTable();
    }
}


        
    
